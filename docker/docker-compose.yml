version: '3'

services:

  keycloak:
     image: jboss/keycloak:4.0.0.Final
     container_name: keycloak
     restart: on-failure
     command:
      - "-b"
      - "0.0.0.0"
      - "-Dkeycloak.migration.action=import"
      - "-Dkeycloak.migration.provider=dir"
      - "-Dkeycloak.migration.dir=/config/"
      - "-Dkeycloak.migration.strategy=IGNORE_EXISTING"
     volumes:
       - ./config:/config/
     environment:
       - KEYCLOAK_USER=admin
       - KEYCLOAK_PASSWORD=password
       - DB_VENDOR=postgres
       - DB_USER=admin
       - DB_PASSWORD=password
       - DB_ADDR=keycloak-db
       - DB_PORT=5432
       - DB_DATABASE=keycloakdb
     ports:
       - "8082:8080"
     labels: 
       - traefik.enable=false
     depends_on:
       - keycloak-db
     networks: 
      - backend

  keycloak-db:
    image: postgres:10
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: password
      POSTGRES_DB: keycloakdb
    volumes:
      - pgdata:/var/lib/postgresql/data
    labels: 
      - traefik.enable=false
    networks: 
      - backend
  event-mysql:
    container_name: event-mysql
    image: mysql:5.7
    environment:
      - MYSQL_DATABASE=backend_or
      - MYSQL_ROOT_PASSWORD=mypassword
     # - MYSQL_ROOT_HOST='%'
      - MYSQL_USER=lmsys
      - MYSQL_PASSWORD=kiram
    volumes:
      - ./data/mysql-data:/var/lib/mysql
     # - ./event-db-init/:/docker-entrypoint-initdb.d
    ports:
      - "3306:3306"
    labels: 
      - traefik.enable=false
    networks: 
      - backend
  
  application:
    restart: always
    #image: backend/event:1.1
    build:
      context: .
      dockerfile: Dockerfile
    #ports:
     # - "8085:8081" # Forward the exposed port 8080 on the container to port 8080 on the host machine
    expose: 
      - "8081"
    environment: 
      WAIT_HOSTS: keycloak:8080
      SPRING_PROFILES_ACTIVE: prod
      SPRING_DATASOURCE_URL: jdbc:mysql://event-mysql:3306/backend_or?verifyServerCertificate=false&useUnicode=yes&characterEncoding=UTF-8&useSSL=false
      SPRING_DATASOURCE_USERNAME: lmsys
      SPRING_DATASOURCE_PASSWORD: kiram
      VIRTUAL_HOST: 'application.localhost'
    depends_on:
      - keycloak
      - event-mysql
      - nginx
    labels:
     # - traefik.backend=application
     # - "traefik.http.routers.myApplication.rule=Host(`application.localhost`)"
     #- "traefik.docker.network=web"
     #- "traefik.http.routers.myApplication.entrypoints=http"
      - "traefik.enable=false"
     # - "traefik.port=8081"
     # - "traefik.http.services.application-app.loadbalancer.server.port=8081"
     # - traefik.protocol=http
    networks: 
      - web
      - backend
  nginx:
    image: jwilder/nginx-proxy
    volumes:
  #     # It needs to access Docker's API, so we mount the Unix socket
      - "/var/run/docker.sock:/tmp/docker.sock:ro"
  #   # Listens on port 80, accessed by our host on http://localhost
    ports:
      - "9009:80"
    labels:
  #    # - traefik.backend=application
      - "traefik.http.routers.myApplication.rule=Host(`application.localhost`)"
      - "traefik.docker.network=web"
      - "traefik.http.routers.myApplication.entrypoints=http"
      - "traefik.enable=true"
    networks: 
     - web
     - backend

volumes:
  pgdata:
  
networks:
  web:
     external: true
  backend:
     external: false